{"version":3,"file":"extension.js","mappings":"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","sources":["webpack://crepp-io/./src/extension.ts","webpack://crepp-io/external commonjs \"vscode\"","webpack://crepp-io/external node-commonjs \"fs\"","webpack://crepp-io/external node-commonjs \"https\"","webpack://crepp-io/webpack/bootstrap","webpack://crepp-io/webpack/startup"],"sourcesContent":["import * as vscode from 'vscode';\nimport * as fs from 'fs';\nimport * as https from 'https';\nimport * as path from 'path';\n\nexport function activate(context: vscode.ExtensionContext) {\n    // Register a TreeViewDataProvider for the \"openGitProjects\" view\n    const gitProjectsProvider = new GitProjectsProvider();\n    vscode.window.registerTreeDataProvider('openGitProjects', gitProjectsProvider);\n\n    // Optional: Add a command to open the panel from this view\n    vscode.commands.registerCommand('extension.openGitProjectsPanel', () => {\n        vscode.window.showInformationMessage('Git Projects Panel Opened!');\n        console.log(\"Git project\");\n    });\n\n    vscode.commands.registerCommand('extension.downloadProjectPDF', async (url: string, name: string) => {\n        const uri = await vscode.window.showSaveDialog({\n            defaultUri: vscode.Uri.file(\"Ressources_Electronique_&_Informatique.pdf\"),\n            filters: { 'PDF Files': ['pdf'] }\n        });\n        \n        if (uri) {\n            const file = fs.createWriteStream(uri.fsPath);\n            https.get(url, response => {\n                response.pipe(file);\n                file.on('finish', () => {\n                    file.close();\n                    vscode.window.showInformationMessage(\"TÃ©lÃ©chargement terminÃ© : ${uri.fsPath}\");\n                });\n            }).on('error', err => {\n                fs.unlink(uri.fsPath, () => {});\n                vscode.window.showErrorMessage(\"Erreur de tÃ©lÃ©chargement : ${err.message}\");\n            });\n        }\n    });\n\n}\n\nexport function deactivate() {}\n\n// Define the TreeDataProvider\nclass GitProjectsProvider implements vscode.TreeDataProvider<ProjectItem> {\n    private _onDidChangeTreeData: vscode.EventEmitter<ProjectItem | undefined | void> = new vscode.EventEmitter<ProjectItem | undefined | void>();\n    readonly onDidChangeTreeData: vscode.Event<ProjectItem | undefined | void> = this._onDidChangeTreeData.event;\n\n    getTreeItem(element: ProjectItem): vscode.TreeItem {\n        return element;\n    }\n\n    getChildren(element?: ProjectItem): Thenable<ProjectItem[]> {\n        if (!element) {\n            // Top-level items (your Git projects)\n            return Promise.resolve([\n\n                new LabelItem('Ressources'), \n                new ProjectItem('Support PDF', 'file', 'https://raw.githubusercontent.com/CREPP-PLOEMEUR/CREPP_Doc.io/main/Ressources_Electronique_&_Informatique.pdf', 'https://raw.githubusercontent.com/CREPP-PLOEMEUR/CREPP_Doc.io/main/Ressources_Electronique_&_Informatique.pdf'),\n\n                new SeparatorItem(),\n\n                new LabelItem('Codes Version 1.x - ESP12'), \n                new ProjectItem('V1.x.Bases - LED', 'code', 'https://github.com/CREPP-Codes/V1.x-Bases.LEDs'),\n                new ProjectItem('V1.x.Bases - PotentiomÃ¨tre', 'code', 'https://github.com/CREPP-Codes/V1.x-Bases.Potentiometre'),\n                new ProjectItem('V1.x.Bases - Boutons', 'code', 'https://github.com/CREPP-Codes/V1.x-Bases.Buttons'),\n\n                new ProjectItem('V1.x.Base - BME280', 'code', 'https://github.com/user/project2.git'),\n                new ProjectItem('V1.x.Base - RTC', 'code', 'https://github.com/user/project2.git'),\n                new ProjectItem('V1.x.Base - HC-SR04', 'code', 'https://github.com/user/project2.git'),\n\n                new ProjectItem('V1.x.Sensors - Serveur WEB minimaliste', 'code', 'https://github.com/user/project2.git'),\n                new ProjectItem('V1.x.Base - Serveur WEB avec BME280', 'code', 'https://github.com/user/project2.git'),\n\n                new SeparatorItem(),\n                new ProjectItem('V1.x.Tools - Scanner I2C', 'wrench', 'https://github.com/user/project2.git'),\n                \n                new SeparatorItem(),\n\n                new LabelItem('Codes Version 2.x - Pico'), \n                new ProjectItem('V2.x.Base - LED', 'code','https://github.com/CREPP-Codes/V1.x-Bases.LEDs'),\n                new ProjectItem('V2.x.Base - PotentiomÃ¨tre', 'code','https://github.com/CREPP-Codes/V1.x-Bases.Potentiometre'),\n                new ProjectItem('V2.x.Base - Boutons', 'code','https://github.com/user/project2.git'),\n                new ProjectItem('V2.x.Base - BME280', 'code','https://github.com/user/project2.git'),\n                new ProjectItem('V2.x.Base - RTC', 'code','https://github.com/user/project2.git'),\n                new ProjectItem('V2.x.Base - HC-SR04', 'code','https://github.com/user/project2.git'),\n\n                new ProjectItem('V2.x.Sensors - Serveur WEB minimaliste', 'code','https://github.com/user/project2.git'),\n                new ProjectItem('V2.x.Base - Serveur WEB avec BME280', 'code','https://github.com/user/project2.git'),\n                new ProjectItem('V2.x.Bot - NRF24', 'hubot','https://github.com/user/project2.git'),\n\n                new SeparatorItem(),\n\n                new LabelItem('Archives'), \n                new ProjectItem('Codes Arduino', 'code','https://github.com/CREPP-PLOEMEUR/Codes_Arduino'),\n                new ProjectItem('Codes ESP12', 'code','https://github.com/CREPP-PLOEMEUR/Codes_ESP12'),\n\n                \n            ]);\n        }\n\n        return Promise.resolve([]); // No children for now\n    }\n}\n\nclass ProjectItem extends vscode.TreeItem {\n    constructor(public readonly label: string, icon: string, public readonly url: string, public readonly pdfUrl?: string) {\n        super(label, vscode.TreeItemCollapsibleState.None);\n        this.command = pdfUrl ? {\n            command: 'extension.downloadProjectPDF',\n            title: 'TÃ©lÃ©charger le PDF',\n            arguments: [pdfUrl, label],\n        } : {\n            command: 'git.clone',\n            title: 'Clone Repository',\n            arguments: [url],\n        };\n        this.iconPath = new vscode.ThemeIcon(icon);\n        \n        if (pdfUrl) {\n            this.contextValue = 'projectWithPDF';\n        }\n    }\n}\n\nclass LabelItem extends ProjectItem {\n    constructor(label: string, icon:string = 'code') {\n        super('ðŸ“Œ '+label, icon, ''); \n        this.contextValue = 'label'; \n        \n        this.iconPath = ''; \n    }\n}\n\nclass SeparatorItem extends ProjectItem {\n    constructor() {\n        super('â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€', '', '');\n        this.contextValue = 'separator'; \n        this.iconPath = undefined;\n    }\n}\n\n// class SeparatorItem extends ProjectItem {\n//     constructor() {\n//         super('$(error) â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€', ''); // Ajout d'une icÃ´ne \"error\" rouge\n//         this.contextValue = 'separator'; // Marque comme un Ã©lÃ©ment spÃ©cial\n//         this.command = undefined; // DÃ©sactive les interactions\n//         this.iconPath = new vscode.ThemeIcon('error'); // IcÃ´ne rouge\n//     }\n// }","module.exports = require(\"vscode\");","module.exports = require(\"fs\");","module.exports = require(\"https\");","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// startup\n// Load entry module and return exports\n// This entry module is referenced by other modules so it can't be inlined\nvar __webpack_exports__ = __webpack_require__(265);\n"],"names":["context","gitProjectsProvider","GitProjectsProvider","vscode","window","registerTreeDataProvider","commands","registerCommand","showInformationMessage","console","log","async","url","name","uri","showSaveDialog","defaultUri","Uri","file","filters","fs","createWriteStream","fsPath","https","get","response","pipe","on","close","err","unlink","showErrorMessage","_onDidChangeTreeData","EventEmitter","onDidChangeTreeData","this","event","getTreeItem","element","getChildren","Promise","resolve","LabelItem","ProjectItem","SeparatorItem","TreeItem","label","pdfUrl","constructor","icon","super","TreeItemCollapsibleState","None","command","title","arguments","iconPath","ThemeIcon","contextValue","undefined","module","exports","require","__webpack_module_cache__","__webpack_exports__","__webpack_require__","moduleId","cachedModule","__webpack_modules__","call"],"sourceRoot":""}